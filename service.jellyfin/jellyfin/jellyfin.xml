<?xml version="1.0"?>
<doc>
    <assembly>
        <name>jellyfin</name>
    </assembly>
    <members>
        <member name="T:Jellyfin.Server.CoreAppHost">
            <summary>
            Implementation of the abstract <see cref="T:Emby.Server.Implementations.ApplicationHost" /> class.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.CoreAppHost.#ctor(Emby.Server.Implementations.ServerApplicationPaths,Microsoft.Extensions.Logging.ILoggerFactory,Jellyfin.Server.StartupOptions,MediaBrowser.Model.IO.IFileSystem,MediaBrowser.Common.Net.INetworkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.CoreAppHost" /> class.
            </summary>
            <param name="applicationPaths">The <see cref="T:Emby.Server.Implementations.ServerApplicationPaths" /> to be used by the <see cref="T:Jellyfin.Server.CoreAppHost" />.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to be used by the <see cref="T:Jellyfin.Server.CoreAppHost" />.</param>
            <param name="options">The <see cref="T:Jellyfin.Server.StartupOptions" /> to be used by the <see cref="T:Jellyfin.Server.CoreAppHost" />.</param>
            <param name="fileSystem">The <see cref="T:MediaBrowser.Model.IO.IFileSystem" /> to be used by the <see cref="T:Jellyfin.Server.CoreAppHost" />.</param>
            <param name="networkManager">The <see cref="T:MediaBrowser.Common.Net.INetworkManager" /> to be used by the <see cref="T:Jellyfin.Server.CoreAppHost" />.</param>
        </member>
        <member name="M:Jellyfin.Server.CoreAppHost.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.CoreAppHost.RestartInternal">
            <inheritdoc />
        </member>
        <member name="M:Jellyfin.Server.CoreAppHost.GetAssembliesWithPartsInternal">
            <inheritdoc />
        </member>
        <member name="M:Jellyfin.Server.CoreAppHost.ShutdownInternal">
            <inheritdoc />
        </member>
        <member name="T:Jellyfin.Server.Extensions.ApiApplicationBuilderExtensions">
            <summary>
            Extensions for adding API specific functionality to the application pipeline.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Extensions.ApiApplicationBuilderExtensions.UseJellyfinApiSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds swagger and swagger UI to the application pipeline.
            </summary>
            <param name="applicationBuilder">The application builder.</param>
            <returns>The updated application builder.</returns>
        </member>
        <member name="T:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions">
            <summary>
            API specific extensions for the service collection.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds jellyfin API authorization policies to the DI container.
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <returns>The updated service collection.</returns>
        </member>
        <member name="M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddCustomAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds custom legacy authentication to the service collection.
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <returns>The updated service collection.</returns>
        </member>
        <member name="M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            Extension method for adding the jellyfin API to the service collection.
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <param name="baseUrl">The base url for the API.</param>
            <returns>The MVC builder.</returns>
        </member>
        <member name="M:Jellyfin.Server.Extensions.ApiServiceCollectionExtensions.AddJellyfinApiSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds Swagger to the service collection.
            </summary>
            <param name="serviceCollection">The service collection.</param>
            <returns>The updated service collection.</returns>
        </member>
        <member name="T:Jellyfin.Server.Migrations.IMigrationRoutine">
            <summary>
            Interface that describes a migration routine.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.IMigrationRoutine.Id">
            <summary>
            Gets the unique id for this migration. This should never be modified after the migration has been created.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.IMigrationRoutine.Name">
            <summary>
            Gets the display name of the migration.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.IMigrationRoutine.PerformOnNewInstall">
            <summary>
            Gets a value indicating whether to perform migration on a new install.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.IMigrationRoutine.Perform">
            <summary>
            Execute the migration routine.
            </summary>
        </member>
        <member name="T:Jellyfin.Server.Migrations.MigrationOptions">
            <summary>
            Configuration part that holds all migrations that were applied.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.MigrationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.MigrationOptions"/> class.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.MigrationOptions.Applied">
            <summary>
            Gets the list of applied migration routine names.
            </summary>
        </member>
        <member name="T:Jellyfin.Server.Migrations.MigrationRunner">
            <summary>
            The class that knows which migrations to apply and how to apply them.
            </summary>
        </member>
        <member name="F:Jellyfin.Server.Migrations.MigrationRunner._migrationTypes">
            <summary>
            The list of known migrations, in order of applicability.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.MigrationRunner.Run(Jellyfin.Server.CoreAppHost,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Run all needed migrations.
            </summary>
            <param name="host">CoreAppHost that hosts current version.</param>
            <param name="loggerFactory">Factory for making the logger.</param>
        </member>
        <member name="T:Jellyfin.Server.Migrations.MigrationsFactory">
            <summary>
            A factory that can find a persistent file of the migration configuration, which lists all applied migrations.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.MigrationsFactory.GetConfigurations">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.MigrationsListStore">
            <summary>
            A configuration that lists all the migration routines that were applied.
            </summary>
        </member>
        <member name="F:Jellyfin.Server.Migrations.MigrationsListStore.StoreKey">
            <summary>
            The name of the configuration in the storage.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.MigrationsListStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.MigrationsListStore"/> class.
            </summary>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository">
            <summary>
            Migration to initialize system configuration with the default plugin repository.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository"/> class.
            </summary>
            <param name="serverConfigurationManager">Instance of the <see cref="T:MediaBrowser.Controller.Configuration.IServerConfigurationManager"/> interface.</param>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.AddDefaultPluginRepository.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile">
            <summary>
            Migration to initialize the user logging configuration file "logging.user.json".
            If the deprecated logging.json file exists and has a custom config, it will be used as logging.user.json,
            otherwise a blank file will be created.
            </summary>
        </member>
        <member name="F:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile._defaultConfigHistory">
            <summary>
            File history for logging.json as existed during this migration creation. The contents for each has been minified.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.Perform">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.CreateUserLoggingConfigFile.ExistingConfigUnmodified(System.String)">
            <summary>
            Check if the existing logging.json file has not been modified by the user by comparing it to all the
            versions in our git history. Until now, the file has never been migrated after first creation so users
            could have any version from the git history.
            </summary>
            <exception cref="T:System.IO.IOException"><paramref name="oldConfigPath"/> does not exist or could not be read.</exception>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.DisableTranscodingThrottling">
            <summary>
            Disable transcode throttling for all installations since it is currently broken for certain video formats.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.DisableTranscodingThrottling.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.DisableTranscodingThrottling.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.DisableTranscodingThrottling.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.DisableTranscodingThrottling.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb">
            <summary>
            The migration routine for migrating the activity log database to EF Core.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb.#ctor(Microsoft.Extensions.Logging.ILogger{Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb},MediaBrowser.Controller.IServerApplicationPaths,Jellyfin.Server.Implementations.JellyfinDbProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="paths">The server application paths.</param>
            <param name="provider">The database provider.</param>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.MigrateActivityLogDb.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.MigrateUserDb">
            <summary>
            The migration routine for migrating the user database to EF Core.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.MigrateUserDb.#ctor(Microsoft.Extensions.Logging.ILogger{Jellyfin.Server.Migrations.Routines.MigrateUserDb},MediaBrowser.Controller.IServerApplicationPaths,Jellyfin.Server.Implementations.JellyfinDbProvider,Emby.Server.Implementations.Serialization.MyXmlSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.Routines.MigrateUserDb"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="paths">The server application paths.</param>
            <param name="provider">The database provider.</param>
            <param name="xmlSerializer">The xml serializer.</param>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateUserDb.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateUserDb.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.MigrateUserDb.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.MigrateUserDb.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository">
            <summary>
            Migration to initialize system configuration with the default plugin repository.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository"/> class.
            </summary>
            <param name="serverConfigurationManager">Instance of the <see cref="T:MediaBrowser.Controller.Configuration.IServerConfigurationManager"/> interface.</param>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.ReaddDefaultPluginRepository.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Migrations.Routines.RemoveDuplicateExtras">
            <summary>
            Remove duplicate entries which were caused by a bug where a file was considered to be an "Extra" to itself.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.RemoveDuplicateExtras.Id">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.RemoveDuplicateExtras.Name">
            <inheritdoc/>
        </member>
        <member name="P:Jellyfin.Server.Migrations.Routines.RemoveDuplicateExtras.PerformOnNewInstall">
            <inheritdoc/>
        </member>
        <member name="M:Jellyfin.Server.Migrations.Routines.RemoveDuplicateExtras.Perform">
            <inheritdoc/>
        </member>
        <member name="T:Jellyfin.Server.Program">
            <summary>
            Class containing the entry point of the application.
            </summary>
        </member>
        <member name="F:Jellyfin.Server.Program.LoggingConfigFileDefault">
            <summary>
            The name of logging configuration file containing application defaults.
            </summary>
        </member>
        <member name="F:Jellyfin.Server.Program.LoggingConfigFileSystem">
            <summary>
            The name of the logging configuration file containing the system-specific override settings.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Program.Main(System.String[])">
            <summary>
            The entry point of the application.
            </summary>
            <param name="args">The command line arguments passed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="M:Jellyfin.Server.Program.Shutdown">
            <summary>
            Shuts down the application.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Program.Restart">
            <summary>
            Restarts the application.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Program.PerformStaticInitialization">
            <summary>
            Call static initialization methods for the application.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Program.ConfigureWebHostBuilder(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Emby.Server.Implementations.ApplicationHost,Microsoft.Extensions.DependencyInjection.IServiceCollection,Jellyfin.Server.StartupOptions,Microsoft.Extensions.Configuration.IConfiguration,MediaBrowser.Common.Configuration.IApplicationPaths)">
            <summary>
            Configure the web host builder.
            </summary>
            <param name="builder">The builder to configure.</param>
            <param name="appHost">The application host.</param>
            <param name="serviceCollection">The application service collection.</param>
            <param name="commandLineOpts">The command line options passed to the application.</param>
            <param name="startupConfig">The application configuration.</param>
            <param name="appPaths">The application paths.</param>
            <returns>The configured web host builder.</returns>
        </member>
        <member name="M:Jellyfin.Server.Program.CreateApplicationPaths(Jellyfin.Server.StartupOptions)">
            <summary>
            Create the data, config and log paths from the variety of inputs(command line args,
            environment variables) or decide on what default to use. For Windows it's %AppPath%
            for everything else the
            <a href="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html">XDG approach</a>
            is followed.
            </summary>
            <param name="options">The <see cref="T:Jellyfin.Server.StartupOptions" /> for this instance.</param>
            <returns><see cref="T:Emby.Server.Implementations.ServerApplicationPaths" />.</returns>
        </member>
        <member name="M:Jellyfin.Server.Program.InitLoggingConfigFile(MediaBrowser.Common.Configuration.IApplicationPaths)">
            <summary>
            Initialize the logging configuration file using the bundled resource file as a default if it doesn't exist
            already.
            </summary>
            <param name="appPaths">The application paths.</param>
            <returns>A task representing the creation of the configuration file, or a completed task if the file already exists.</returns>
        </member>
        <member name="M:Jellyfin.Server.Program.CreateAppConfiguration(Jellyfin.Server.StartupOptions,MediaBrowser.Common.Configuration.IApplicationPaths)">
            <summary>
            Create the application configuration.
            </summary>
            <param name="commandLineOpts">The command line options passed to the program.</param>
            <param name="appPaths">The application paths.</param>
            <returns>The application configuration.</returns>
        </member>
        <member name="M:Jellyfin.Server.Program.InitializeLoggingFramework(Microsoft.Extensions.Configuration.IConfiguration,MediaBrowser.Common.Configuration.IApplicationPaths)">
            <summary>
            Initialize Serilog using configuration and fall back to defaults on failure.
            </summary>
        </member>
        <member name="T:Jellyfin.Server.Startup">
            <summary>
            Startup configuration for the Kestrel webhost.
            </summary>
        </member>
        <member name="M:Jellyfin.Server.Startup.#ctor(MediaBrowser.Controller.Configuration.IServerConfigurationManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Jellyfin.Server.Startup" /> class.
            </summary>
            <param name="serverConfigurationManager">The server configuration manager.</param>
        </member>
        <member name="M:Jellyfin.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the service collection for the webhost.
            </summary>
            <param name="services">The service collection.</param>
        </member>
        <member name="M:Jellyfin.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,MediaBrowser.Controller.IServerApplicationHost)">
            <summary>
            Configures the app builder for the webhost.
            </summary>
            <param name="app">The application builder.</param>
            <param name="env">The webhost environment.</param>
            <param name="serverApplicationHost">The server application host.</param>
        </member>
        <member name="T:Jellyfin.Server.StartupOptions">
            <summary>
            Class used by CommandLine package when parsing the command line arguments.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.DataDir">
            <summary>
            Gets or sets the path to the data directory.
            </summary>
            <value>The path to the data directory.</value>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.NoWebClient">
            <summary>
            Gets or sets a value indicating whether the server should not host the web client.
            </summary>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.WebDir">
            <summary>
            Gets or sets the path to the web directory.
            </summary>
            <value>The path to the web directory.</value>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.CacheDir">
            <summary>
            Gets or sets the path to the cache directory.
            </summary>
            <value>The path to the cache directory.</value>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.ConfigDir">
            <summary>
            Gets or sets the path to the config directory.
            </summary>
            <value>The path to the config directory.</value>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.LogDir">
            <summary>
            Gets or sets the path to the log directory.
            </summary>
            <value>The path to the log directory.</value>
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.FFmpegPath">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.IsService">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.NoAutoRunWebApp">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.PackageName">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.RestartPath">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.RestartArgs">
            <inheritdoc />
        </member>
        <member name="P:Jellyfin.Server.StartupOptions.PublishedServerUrl">
            <inheritdoc />
        </member>
        <member name="M:Jellyfin.Server.StartupOptions.ConvertToConfig">
            <summary>
            Gets the command line options as a dictionary that can be used in the .NET configuration system.
            </summary>
            <returns>The configuration dictionary.</returns>
        </member>
    </members>
</doc>
