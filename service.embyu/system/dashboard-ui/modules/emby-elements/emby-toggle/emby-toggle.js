define(["css!./emby-toggle"],function(){"use strict";function onKeyDown(e){if(13===e.keyCode)return e.preventDefault(),this.checked=!this.checked,this.dispatchEvent(new CustomEvent("change",{bubbles:!0})),!1}function onInit(){this.hasInit||(this.hasInit=!0)}function _connectedCallback(){if("true"!==this.getAttribute("data-embytoggle")){this.setAttribute("data-embytoggle","true"),this.classList.add("mdl-switch__input");var labelElement=this.parentNode;labelElement.classList.add("mdl-switch"),labelElement.classList.add("mdl-js-switch");var labelTextElement=labelElement.querySelector("span");labelElement.insertAdjacentHTML("beforeend",'<div class="mdl-switch__trackContainer"><div class="mdl-switch__track"></div><div class="mdl-switch__thumb"><span class="mdl-switch__focus-helper"></span></div></div>'),labelTextElement.classList.add("toggleButtonLabel"),labelTextElement.classList.add("mdl-switch__label"),this.addEventListener("keydown",onKeyDown)}}if(window.customElements){var EmbyToggle=function(_HTMLInputElement){function EmbyToggle(){var _this;babelHelpers.classCallCheck(this,EmbyToggle);var self=_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(EmbyToggle).call(this));return onInit.call(self),babelHelpers.possibleConstructorReturn(_this,self)}return babelHelpers.inherits(EmbyToggle,_HTMLInputElement),babelHelpers.createClass(EmbyToggle,[{key:"connectedCallback",value:function(){onInit.call(this),_connectedCallback.call(this)}}]),EmbyToggle}(babelHelpers.wrapNativeSuper(HTMLInputElement));customElements.define("emby-toggle",EmbyToggle,{extends:"input"})}else if(document.registerElement){var EmbyTogglePrototype=Object.create(HTMLButtonElement.prototype);EmbyTogglePrototype.createdCallback=onInit,EmbyTogglePrototype.attachedCallback=_connectedCallback,document.registerElement("emby-toggle",{prototype:EmbyTogglePrototype,extends:"input"})}});